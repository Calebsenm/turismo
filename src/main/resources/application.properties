spring.application.name=turismo

# DataSource Configuration
## Default JDBC URL: if DATABASE_URL env var is not set, use local MySQL and allow auto-creation for dev
## Para configurar una base de datos diferente puedes crear un archivo llamado aplication-dev.properties 
## apartir del archivo de aplication-dev.properties.example y agregar las credenciales correspondientes
## para porder correr la app con esas configuraciones. 
## mvn spring-boot:run "-Dspring-boot.run.profiles=dev"  

spring.datasource.url=${DATABASE_URL:jdbc:mysql://localhost:3306/turismo_db?createDatabaseIfNotExist=true&serverTimezone=UTC&useSSL=false}
spring.datasource.username=${DB_USER:root}
spring.datasource.password=${DB_PASS:}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# JPA/Hibernate Configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false
spring.jpa.open-in-view=false

# Hikari Connection Pool
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.pool-name=HikariPool-1
spring.datasource.hikari.initialization-fail-timeout=0

# JWT secrets 
application.security.jwt.secret-key=${JWT_SECRET:dwaerqwernasdwqert76qtasfasdfrqwevqwer213t2734r}
application.security.jwt.expiration=${JWT_EXPIRATION:86400000}
spring.thymeleaf.enabled=true
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html
# Cors 
cors.allowed.origins=${CORS_ALLOWED_ORIGINS:http://localhost:4000}